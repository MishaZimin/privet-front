import React, { Component, useState } from "react";
import {
    View,
    Text,
    Button,
    FlatList,
    TouchableOpacity,
    AsyncStorage,
    StyleSheet,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import {
    LogInData,
    registrationData,
    languageTranslate,
    getJSONFromServer,
    sendJSONToServer,
    initialTasksData,
} from "../../Utils.jsx";
import { styles } from "../../main.jsx";
import BackButton from "../../back-button.jsx";
import StudentsScreen from "../student.jsx";
import { form } from "../../registration/registration-IS.jsx";

const RouteScreen = ({ navigation }) => {
    const [tasks, setTasks] = useState(initialTasksData);
    const [selectedItemId, setSelectedItemId] = useState(null);

    const handlePress = (itemId) => {
        setSelectedItemId(itemId === selectedItemId ? null : itemId);
    };
    return (
        <SafeAreaView style={form.main}>
            <View style={form.main}>
                {/* <BackButton /> */}
                {/* <View style={styles.form}> */}
                <View style={{ paddingBottom: 160 }}>
                    <View style={form.textBlock}>
                        <Text style={[form.textHeader, { marginBottom: -90 }]}>
                            –ú–∞—Ä—à—Ä—É—Ç
                        </Text>
                    </View>
                    <FlatList
                        style={route.flat}
                        data={tasks}
                        renderItem={({ item }) => (
                            <TouchableOpacity
                                style={[
                                    route.form,
                                    {
                                        backgroundColor:
                                            selectedItemId === item.id
                                                ? "white"
                                                : "white",
                                    },
                                ]}
                                onPress={() => handlePress(item.id)}
                            >
                                <Text>
                                    {item.id}. {item.text}
                                </Text>
                                {selectedItemId === item.id && (
                                    <Text
                                        style={{
                                            marginTop: 10,
                                            color: "black",
                                            paddingHorizontal: "4%",
                                            paddingBottom: "4%",
                                            fontSize: 14,
                                        }}
                                    >
                                        üìç**–ê–¥—Ä–µ—Å**: –ø–ª–æ—â–∞–¥—å –ë–∞—Ö—á–∏–≤–∞–Ω–¥–∂–∏, 1
                                        üéØ**–¶–µ–ª—å**: –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ
                                        —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç—É ### ‚òùÔ∏è**–°–¥–µ–ª–∞—Ç—å
                                        –∑–∞—Ä–∞–Ω–µ–µ**: 1Ô∏è‚É£ –ó–∞—Ä–∞–Ω–µ–µ —Ä–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –≤—Ä–µ–º—è
                                        –ø—Ä–∏–±—ã—Ç–∏—è –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç, —á—Ç–æ–±—ã –Ω–µ –æ–ø–æ–∑–¥–∞—Ç—å.
                                        2Ô∏è‚É£ –ó–∞—Ä–∞–Ω–µ–µ —É–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –≤–∞—à
                                        –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç, –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –µ–º—É –æ
                                        —Ç–æ–º, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç–µ –≤—ã, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –¥—Ä—É–≥
                                        –¥—Ä—É–≥–∞ –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç—É. 3Ô∏è‚É£ –ü–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤
                                        –∞—ç—Ä–æ–ø–æ—Ä—Ç –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∑–∞–¥–µ—Ä–∂–∞–Ω –∏–ª–∏ –Ω–µ
                                        –æ—Ç–º–µ–Ω–µ–Ω –ª–∏ —Ä–µ–π—Å –≤–∞—à–µ–≥–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ
                                        —Å—Ç—É–¥–µ–Ω—Ç–∞. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ
                                        [**–û–Ω–ª–∞–π–Ω-—Ç–∞–±–ª–æ
                                        –ö–æ–ª—å—Ü–æ–≤–æ**](https://svx.aero/board/).
                                        –ò–∑-–∑–∞ —Ä–∞–∑–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤ —Ä–µ–π—Å –º–æ–∂–µ—Ç
                                        –±—ã—Ç—å –∑–∞–¥–µ—Ä–∂–∞–Ω –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω. –ï—Å–ª–∏ —Ä–µ–π—Å
                                        –∑–∞–¥–µ—Ä–∂–∞–Ω, –≤—ã–µ–∑–∂–∞–π—Ç–µ –∫ –Ω–æ–≤–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
                                        –ø—Ä–∏–±—ã—Ç–∏—è —Ä–µ–π—Å–∞. –ï—Å–ª–∏ —Ä–µ–π—Å –æ—Ç–º–µ–Ω–µ–Ω,
                                        —É—Ç–æ—á–Ω–∏—Ç–µ —É –≤–∞—à–µ–≥–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
                                        –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –µ–≥–æ –ø—Ä–∏–±—ã—Ç–∏—è.
                                    </Text>
                                )}
                            </TouchableOpacity>
                        )}
                        keyExtractor={(item) => item.id.toString()}
                    />
                </View>
            </View>
            <StudentsScreen navigation={navigation} />
        </SafeAreaView>
    );
};

export const route = StyleSheet.create({
    flat: {
        paddingTop: 0,
    },
    form: {
        width: "90%",
        marginLeft: "5%",
        marginBottom: "2%",
        padding: "4%",
        // padding: "7%",
        alignItems: "left",
        backgroundColor: "white",
        borderRadius: 30,

        shadowColor: "grey",
        shadowOffset: { width: 0, height: 0 },
        shadowOpacity: 0.25,
        shadowRadius: 10,
    },
});

export default RouteScreen;
